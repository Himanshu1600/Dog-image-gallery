{"version":3,"sources":["Homepage.js","App.js","index.js"],"names":["Homepage","useState","breed","setbreed","subbreed","setsubbreed","currentbreed","setcurrentbreed","currentSubbreed","setcurrentSubbreed","breedimg","setbreedimg","getimg","setgetimg","useEffect","getsubbreedApi","getbreedimageApi","getbreedApi","a","fetch","data","json","parsedata","message","subdata","length","Url","Object","values","newimg","className","id","name","onChange","e","target","value","map","element","index","onClick","imglink","src","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAsGeA,MAnGf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,iBAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA4BV,oBAAS,GAArC,mBAAOW,EAAP,KAAeC,EAAf,KAeAC,qBAAU,WACRC,IACAC,IACAH,GAAU,KACT,CAACP,EAAcE,IAGlBM,qBAAU,WACRG,IACAF,MACC,IAGH,IAAME,EAAW,uCAAG,8BAAAC,EAAA,sEACDC,MAAM,mCADL,cACdC,EADc,gBAEIA,EAAKC,OAFT,OAEdC,EAFc,OAGlBnB,EAASmB,EAAUC,SAHD,2CAAH,qDAQXR,EAAc,uCAAG,8BAAAG,EAAA,sEACDC,MAAM,6BAAD,OAA8Bb,EAA9B,UADJ,cACjBkB,EADiB,gBAECA,EAAQH,OAFT,SAEjBC,EAFiB,QAIVC,QAAQE,QAAUhB,EAAmB,IAChDJ,EAAYiB,EAAUC,SALD,2CAAH,qDASdP,EAAgB,uCAAG,kCAAAE,EAAA,6DACnBQ,EADmB,oCACgBpB,GADhB,OAC+BE,EAD/B,8BAEHW,MAAMO,GAFH,cAEnBF,EAFmB,gBAGDA,EAAQH,OAHP,cAGnBC,EAHmB,gBAIJK,OAAOC,OAAON,EAAUC,SAJpB,OAInBM,EAJmB,OAMvBlB,EAAYkB,GANW,4CAAH,qDAStB,OACE,sBAAKC,UAAU,YAAf,UACE,uDACA,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,mDACA,wBAAQC,GAAG,OAAOC,KAAK,QAAQC,SAzDnB,SAACC,GAEnB3B,EAAgB2B,EAAEC,OAAOC,QAuDnB,SACGlC,EAAMmC,KAAI,SAACC,EAASC,GACnB,OAAO,wBAAQR,GAAIQ,EAAZ,SAAoBD,YAIhClC,EAASqB,OACR,sBAAKK,UAAU,cAAf,UACE,sDACA,yBAAQC,GAAG,UAAUC,KAAK,WAAWC,SA5DxB,SAACC,GACtBzB,EAAmB,IAAD,OAAKyB,EAAEC,OAAOC,SA2DxB,UACE,uCACChC,EAASiC,KAAI,SAACC,GACb,OAAO,iCAASA,aAIpB,KAEJ,wBAAQR,UAAU,MAAMU,QAAS,kBAAM3B,GAAU,IAAjD,0BAKF,qBAAKiB,UAAU,gBAAf,SACGlB,GACCF,EAAS2B,KAAI,SAACI,GACZ,OAAO,qBAAKC,IAAKD,EAASE,IAAI,UAAUb,UAAU,iBCpF/Cc,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e024ca74.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Homepage.css\";\r\n\r\nfunction Homepage() {\r\n  const [breed, setbreed] = useState([]);\r\n  const [subbreed, setsubbreed] = useState([]);\r\n  const [currentbreed, setcurrentbreed] = useState(\"affenpinscher\");\r\n  const [currentSubbreed, setcurrentSubbreed] = useState(\"\");\r\n  const [breedimg, setbreedimg] = useState([]);\r\n  const [getimg, setgetimg] = useState(false);\r\n\r\n  //Store current value of breed coloum\r\n  const handlebreed = (e) => {\r\n    // console.log(e.target.value);\r\n    setcurrentbreed(e.target.value);\r\n  };\r\n\r\n  //Store current value of subbreed coloum\r\n  const handlesubbreed = (e) => {\r\n    setcurrentSubbreed(`/${e.target.value}`);\r\n    // console.log(currentSubbreed);\r\n  };\r\n\r\n  // Run the functions whenever breed or subbreed value will change\r\n  useEffect(() => {\r\n    getsubbreedApi();\r\n    getbreedimageApi();\r\n    setgetimg(false);\r\n  }, [currentbreed, currentSubbreed]);\r\n\r\n  // Run whenever the page reload\r\n  useEffect(() => {\r\n    getbreedApi();\r\n    getsubbreedApi();\r\n  }, []);\r\n\r\n  // fetch the Breed list from api\r\n  const getbreedApi = async () => {\r\n    let data = await fetch(\"https://dog.ceo/api/breeds/list\");\r\n    let parsedata = await data.json();\r\n    setbreed(parsedata.message);\r\n    // console.log(breed);\r\n  };\r\n\r\n  // fetch the subbreed list of selected breed from api\r\n  const getsubbreedApi = async () => {\r\n    let subdata = await fetch(`https://dog.ceo/api/breed/${currentbreed}/list`);\r\n    let parsedata = await subdata.json();\r\n    // console.log(parsedata.message);\r\n    !parsedata.message.length && setcurrentSubbreed(\"\");\r\n    setsubbreed(parsedata.message);\r\n  };\r\n\r\n  //fetch images of selected breed or subbreed\r\n  const getbreedimageApi = async () => {\r\n    let Url = `https://dog.ceo/api/breed/${currentbreed}${currentSubbreed}/images/random/10`;\r\n    let subdata = await fetch(Url);\r\n    let parsedata = await subdata.json();\r\n    let newimg = await Object.values(parsedata.message);\r\n    // console.log(newimg);\r\n    setbreedimg(newimg);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>The Dog Image Gallery</h1>\r\n      <div className=\"heading\">\r\n        <div className=\"select_list\">\r\n          <label>Choose breed -</label>\r\n          <select id=\"dogs\" name=\"breed\" onChange={handlebreed}>\r\n            {breed.map((element, index) => {\r\n              return <option id={index}>{element}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n        {subbreed.length ? (\r\n          <div className=\"select_list\">\r\n            <label>Choose subbreed -</label>\r\n            <select id=\"subdogs\" name=\"subbreed\" onChange={handlesubbreed}>\r\n              <option> </option>\r\n              {subbreed.map((element) => {\r\n                return <option>{element}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n        ) : null}\r\n\r\n        <button className=\"btn\" onClick={() => setgetimg(true)}>\r\n          Get image\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"img-container\">\r\n        {getimg &&\r\n          breedimg.map((imglink) => {\r\n            return <img src={imglink} alt=\"loading\" className=\"img\" />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\nimport Homepage from \"./Homepage\";\n\nfunction App() {\n  return (\n    <div>\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}